# This is a basic workflow to help you get started with Actions

name: Deploying the API-Gateway in GCP

# Controls when the workflow will run
on:
  push:
    branches:
      - "main"
      - "development"
      - "staging"
      
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:
  
env:
  # TODO: update Google Cloud project id
  DEV_PROJECT_ID: provisionsowtestrrr
  STG_PROJECT_ID: onecloud-provision-stg
  PRD_PROJECT_ID:  test-project
  # TODO: Setup API name for API Gateway Config
  API_NAME-DEV: fastapi-dev
  API_NAME-STG: fastapi-stg
  API_NAME-PRD: fastapi-prd
  # TODO: Config Files Location based on Environment (Dev,Stg,Prd)
  CONFIG_FILE_DEV: dev-config.yaml
  CONFIG_FILE_STG: stg-config.yaml
  CONFIG_FILE_PRD: prd-config.yaml
  # TODO: API Gateway name based on Deployment(Dev,Stg,Prd))
  API_GATEWAY_DEV: onecloud-api-gateway-dev
  API_GATEWAY_STG: onecloud-api-gateway-stg
  API_GATEWAY_PRD: onecloud-api-gateway-prd
  # TODO: Configuration Name based on Enviroment(Dev,Stg,Prd)
  CONFIG_NAME_DEV: onecloud-api-config-dev
  CONFIG_NAME_STG: onecloud-api-config-stg
  CONFIG_NAME_PRD: onecloud-api-config-prd

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Dev_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'
#       NOTE: Alternative option - authentication via credentials json
      - name: 'Google Auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_API }}'

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
            # make file runnable, might not be necessary
             chmod +x "${GITHUB_WORKSPACE}/gcp-apigateway-build.sh"
            # Run the script for deployment 
             bash -x ${GITHUB_WORKSPACE}/gcp-apigateway-build.sh ${{ env.DEV_PROJECT_ID }} ${{ env.API_NAME-DEV }} ${GITHUB_WORKSPACE}/${{ env.CONFIG_FILE_DEV }} ${{ env.API_GATEWAY_DEV }} ${{ env.CONFIG_NAME_DEV }}
  Stg_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'
#       NOTE: Alternative option - authentication via credentials json
      - name: 'Google Auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_STG }}'

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
            # make file runnable, might not be necessary
             chmod +x "${GITHUB_WORKSPACE}/gcp-apigateway-build.sh"
            # Run the script for deployment 
             bash -x ${GITHUB_WORKSPACE}/gcp-apigateway-build.sh ${{ env.STG_PROJECT_ID }} ${{ env.API_NAME-STG }} ${GITHUB_WORKSPACE}/${{ env.CONFIG_FILE_STG }} ${{ env.API_GATEWAY_STG }} ${{ env.CONFIG_NAME_STG }}          
  Prd_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'
#       NOTE: Alternative option - authentication via credentials json
      - name: 'Google Auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_PRD }}'

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
            # make file runnable, might not be necessary
             chmod +x "${GITHUB_WORKSPACE}/gcp-apigateway-build.sh"
            # Run the script for deployment 
             bash -x ${GITHUB_WORKSPACE}/gcp-apigateway-build.sh ${{ env.PRD_PROJECT_ID }} ${{ env.API_NAME-PRD }} ${GITHUB_WORKSPACE}/${{ env.CONFIG_FILE_PRD }} ${{ env.API_GATEWAY_PRD }} ${{ env.CONFIG_NAME_PRD }}           

             
